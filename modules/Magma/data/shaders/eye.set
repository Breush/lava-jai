
layout(std430, push_constant) uniform PushConstant {
    vec4 eyeViewMatrixRow0;
    vec4 eyeViewMatrixRow1;
    vec4 eyeViewMatrixRow2;
    mat4 eyeProjectionMatrix;
    int eyeLastChangeFrame;
    int frame; // @todo Trick, this is in an other push constant in code...
} pushConstant;

struct EyeShaderObject {
    mat4 viewMatrix;
    mat4 projectionMatrix;
    vec3 position;
    int lastChangeFrame;
} eye;

void setupEye() {
    eye.viewMatrix = mat4(pushConstant.eyeViewMatrixRow0,
                          pushConstant.eyeViewMatrixRow1,
                          pushConstant.eyeViewMatrixRow2,
                          vec4(0, 0, 0, 1));

    eye.projectionMatrix = pushConstant.eyeProjectionMatrix;

    // @note GLSL matrices are expressed in columns, thus we need to transpose
    // to be clean.
    eye.viewMatrix = transpose(eye.viewMatrix);
    eye.projectionMatrix = transpose(eye.projectionMatrix);

    eye.position = inverse(eye.viewMatrix)[3].xyz;

    eye.lastChangeFrame = pushConstant.eyeLastChangeFrame;
}
